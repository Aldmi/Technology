метод GetSortedWords сортирует слова в строке, сначала по длине, потом лексикографически (т.е. по алфавиту).
Можно было применить ThenBy сразу за OrderBy для указания 2 параметра сортировки, но если параметров много, то удобнее использовать новый тип, тип кортежа
Кортеж реалитзует IComparable - сравнивающий кортежи по компонентам (Tuple.Create(1, 2) будет меньше Tuple.Create(2, 1).)
 
       
public static List<string> GetSortedWords(string text)
{
	return Regex.Split(text.ToLower(), @"\W+")             // Выделение слов из строки (без знаков припинания и пробелов)
		.Where(word => word != "")
		.Distinct()
		.OrderBy(word => Tuple.Create(word.Length, word))  // Задаем последовательно парметры для сортировки: word.Length- сначала по длинне, потом лексикографически 
		.ToList();
}